@page "/"
<PageTitle>Home</PageTitle>
<head>
    <link href="#" rel="stylesheet" />
</head>
<h1 id="MyShit">My shit</h1>



<body>
@* put in the div here what you want to show when the button is clicked *@
<div @attributes= "Attribute">
    You clicked the button
        <TestComponent1  />
        @* <TestComponent3/> *@
</div>


@* when this button is clicked, the ButtonCLick Method gets activated *@
<button id="b1" type="button" @onclick="ButtonClick">
    A button
</button>

<NavLink href="@("/Manga")">
    <button> Manga </button>
</NavLink>

<NavLink href ="@("/Mastermind")">
    <button> Mastermind </button>
</NavLink>

    <NavLink href="@("/Counter")">
        <button>Counter </button>
    </NavLink>

<div>
    
    @* <TestComponent4 Text="You seeing this shit?"/> you can give along parameters if you define them as properties in the object, but these are literal values  *@
        <TestComponent4 NameOfChild="Rose" Visible="true" />
    
</div>
</body>
@code{
    //we declare a attribute and put a style in there, as a reminder, an attribute is technically just a property of a thing
    public Dictionary<string,object> Attribute { get; set; }

    //create an instance of the attribute on the loading of a page 
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Attribute = new();
        Attribute.Add("style", "display:none");
    }
    //when the button is clicked, change the display
    public void ButtonClick()
    {
        Attribute["style"] = "display:block";
    }
    public void VisibleComponent()
    {
        
    }
}